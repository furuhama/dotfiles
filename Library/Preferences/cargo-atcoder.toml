[atcoder]
submit_via_binary = false # submit via binary by default
use_cross = false         # use `cross` instead of `cargo` when generating binaries
binary_column = 80        # maximum column number of generated binary (0 for no wrapping)
update_interval = 1000    # interval time of fetching result (ms)
strip_path = "strip"      # specify `strip` command path. NOTE: if you use macOS, you have to install GNU strip and specify its path here.

[profile]
# target to use to generate binary
target = "x86_64-unknown-linux-musl"

[profile.release]
lto = true
panic = 'abort'

# dependencies added to new project
[dependencies]
alga = "0.9.3"
ascii = "1.0.0"
bitset-fixed = "0.1.0"
either = "1.5.3"
fixedbitset = "0.2.0"
getrandom = "0.1.14"
im-rc = "14.3.0"
indexmap = "1.3.2"
itertools = "0.9.0"
itertools-num = "0.1.3"
lazy_static = "1.4.0"
libm = "0.2.1"
maplit = "1.0.2"
nalgebra = "0.20.0"
ndarray = "0.13.0"
num = "0.2.1"
num-bigint = "0.2.6"
num-complex = "0.2.4"
num-derive = "0.3.0"
num-integer = "0.1.42"
num-iter = "0.1.40"
num-rational = "0.2.4"
num-traits = "0.2.11"
ordered-float = "1.0.2"
petgraph = "0.5.0"
permutohedron = "0.2.4"
proconio = { version = "0.3.6", features = ["derive"] }
rand = { version = "0.7.3", features = ["small_rng"] }
rand_chacha = "0.2.2"
rand_core = "0.5.1"
rand_hc = "0.2.0"
rand_pcg = "0.2.1"
rand_distr = "0.2.2"
regex = "1.3.6"
rustc-hash = "1.1.0"
smallvec = "1.2.0"
superslice = "1.0.0"
text_io = "0.1.8"
whiteread = "0.5.0"

[project]
# to create `rust-toolchain` file, uncomment this line.
rustc_version = "1.42.0"

# source code template
template = """
#[allow(unused_imports, unused_macros)]
use proconio::{
    fastout, input,
    marker::{Bytes, Chars, Usize1},
};

macro_rules! echo {
    ($($e:expr),+) => ( { $(println!("{}", $e))+ } );
}

fn main() {
    unimplemented!();
}
"""
